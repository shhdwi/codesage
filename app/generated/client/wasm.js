
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  emailVerified: 'emailVerified',
  name: 'name',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AccountScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  type: 'type',
  provider: 'provider',
  providerAccountId: 'providerAccountId',
  refresh_token: 'refresh_token',
  access_token: 'access_token',
  expires_at: 'expires_at',
  token_type: 'token_type',
  scope: 'scope',
  id_token: 'id_token',
  session_state: 'session_state'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionToken: 'sessionToken',
  userId: 'userId',
  expires: 'expires'
};

exports.Prisma.VerificationTokenScalarFieldEnum = {
  identifier: 'identifier',
  token: 'token',
  expires: 'expires'
};

exports.Prisma.InstallationScalarFieldEnum = {
  id: 'id',
  githubId: 'githubId',
  owner: 'owner',
  ownerType: 'ownerType',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RepositoryScalarFieldEnum = {
  id: 'id',
  installationId: 'installationId',
  fullName: 'fullName',
  defaultBranch: 'defaultBranch',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  description: 'description',
  generationPrompt: 'generationPrompt',
  fileTypeFilters: 'fileTypeFilters',
  severityThreshold: 'severityThreshold',
  enabled: 'enabled',
  evaluationPrompt: 'evaluationPrompt',
  evaluationDims: 'evaluationDims',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AgentRepositoryBindingScalarFieldEnum = {
  id: 'id',
  agentId: 'agentId',
  repoId: 'repoId',
  enabled: 'enabled'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  repoId: 'repoId',
  agentId: 'agentId',
  prNumber: 'prNumber',
  commitSha: 'commitSha',
  filePath: 'filePath',
  lineNumber: 'lineNumber',
  codeChunk: 'codeChunk',
  comment: 'comment',
  severity: 'severity',
  postedAt: 'postedAt',
  githubCommentId: 'githubCommentId',
  rawLLM: 'rawLLM',
  createdAt: 'createdAt',
  isThreadReply: 'isThreadReply',
  parentReviewId: 'parentReviewId'
};

exports.Prisma.EvaluationScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  scores: 'scores',
  summary: 'summary',
  createdAt: 'createdAt'
};

exports.Prisma.FeedbackScalarFieldEnum = {
  id: 'id',
  reviewId: 'reviewId',
  rating: 'rating',
  createdAt: 'createdAt'
};

exports.Prisma.CostTrackingScalarFieldEnum = {
  id: 'id',
  agentId: 'agentId',
  repoId: 'repoId',
  generationTokens: 'generationTokens',
  evaluationTokens: 'evaluationTokens',
  totalTokens: 'totalTokens',
  estimatedCostUsd: 'estimatedCostUsd',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};


exports.Prisma.ModelName = {
  User: 'User',
  Account: 'Account',
  Session: 'Session',
  VerificationToken: 'VerificationToken',
  Installation: 'Installation',
  Repository: 'Repository',
  Agent: 'Agent',
  AgentRepositoryBinding: 'AgentRepositoryBinding',
  Review: 'Review',
  Evaluation: 'Evaluation',
  Feedback: 'Feedback',
  CostTracking: 'CostTracking'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/shhdwi/codesage/code-sage/app/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "linux-musl"
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/shhdwi/codesage/code-sage/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../../.env",
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider      = \"prisma-client-js\"\n  binaryTargets = [\"native\", \"linux-musl\", \"rhel-openssl-3.0.x\"]\n  output        = \"../app/generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id            String    @id @default(cuid())\n  email         String    @unique\n  emailVerified DateTime?\n  name          String?\n  image         String?\n  accounts      Account[]\n  sessions      Session[]\n  agents        Agent[]\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n}\n\nmodel Account {\n  id                String  @id @default(cuid())\n  userId            String\n  type              String\n  provider          String\n  providerAccountId String\n  refresh_token     String? @db.Text\n  access_token      String? @db.Text\n  expires_at        Int?\n  token_type        String?\n  scope             String?\n  id_token          String? @db.Text\n  session_state     String?\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([provider, providerAccountId])\n}\n\nmodel Session {\n  id           String   @id @default(cuid())\n  sessionToken String   @unique\n  userId       String\n  expires      DateTime\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel VerificationToken {\n  identifier String\n  token      String   @unique\n  expires    DateTime\n\n  @@unique([identifier, token])\n}\n\nmodel Installation {\n  id           String       @id @default(cuid())\n  githubId     BigInt       @unique\n  owner        String\n  ownerType    String\n  repositories Repository[]\n  createdAt    DateTime     @default(now())\n  updatedAt    DateTime     @updatedAt\n}\n\nmodel Repository {\n  id             String                   @id @default(cuid())\n  installationId String\n  installation   Installation             @relation(fields: [installationId], references: [id], onDelete: Cascade)\n  fullName       String                   @unique\n  defaultBranch  String?\n  createdAt      DateTime                 @default(now())\n  updatedAt      DateTime                 @updatedAt\n  agentBindings  AgentRepositoryBinding[]\n  reviews        Review[]\n}\n\nmodel Agent {\n  id                String                   @id @default(cuid())\n  userId            String\n  user              User                     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  name              String\n  description       String?\n  generationPrompt  String                   @db.Text\n  fileTypeFilters   String[]                 @default([])\n  severityThreshold Int                      @default(1)\n  enabled           Boolean                  @default(true)\n  evaluationPrompt  String                   @db.Text\n  evaluationDims    String[]                 @default([\"relevance\", \"accuracy\", \"actionability\", \"clarity\"])\n  createdAt         DateTime                 @default(now())\n  updatedAt         DateTime                 @updatedAt\n  bindings          AgentRepositoryBinding[]\n  reviews           Review[]\n  costTracking      CostTracking[]\n}\n\nmodel AgentRepositoryBinding {\n  id      String     @id @default(cuid())\n  agentId String\n  agent   Agent      @relation(fields: [agentId], references: [id], onDelete: Cascade)\n  repoId  String\n  repo    Repository @relation(fields: [repoId], references: [id], onDelete: Cascade)\n  enabled Boolean    @default(true)\n\n  @@unique([agentId, repoId])\n}\n\nmodel Review {\n  id              String       @id @default(cuid())\n  repoId          String\n  repo            Repository   @relation(fields: [repoId], references: [id], onDelete: Cascade)\n  agentId         String\n  agent           Agent        @relation(fields: [agentId], references: [id], onDelete: Cascade)\n  prNumber        Int\n  commitSha       String\n  filePath        String\n  lineNumber      Int\n  codeChunk       String       @db.Text\n  comment         String       @db.Text\n  severity        Int\n  postedAt        DateTime\n  githubCommentId BigInt?\n  rawLLM          Json?\n  createdAt       DateTime     @default(now())\n  evaluations     Evaluation[]\n  feedbacks       Feedback[]\n  isThreadReply   Boolean      @default(false)\n  parentReviewId  String?\n\n  @@index([repoId, prNumber])\n  @@index([agentId])\n  @@index([githubCommentId])\n}\n\nmodel Evaluation {\n  id        String   @id @default(cuid())\n  reviewId  String\n  review    Review   @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n  scores    Json\n  summary   String?  @db.Text\n  createdAt DateTime @default(now())\n\n  @@index([reviewId])\n}\n\nmodel Feedback {\n  id        String   @id @default(cuid())\n  reviewId  String\n  review    Review   @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n  rating    Int\n  createdAt DateTime @default(now())\n\n  @@index([reviewId])\n}\n\nmodel CostTracking {\n  id               String   @id @default(cuid())\n  agentId          String\n  agent            Agent    @relation(fields: [agentId], references: [id], onDelete: Cascade)\n  repoId           String?\n  generationTokens Int\n  evaluationTokens Int\n  totalTokens      Int\n  estimatedCostUsd Float\n  createdAt        DateTime @default(now())\n\n  @@index([agentId, createdAt])\n}\n",
  "inlineSchemaHash": "f1d17a20eccdb5e79eaa2e2fa8233abc07b77efd64159564d9e506e32dbd9104",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accounts\",\"kind\":\"object\",\"type\":\"Account\",\"relationName\":\"AccountToUser\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"Session\",\"relationName\":\"SessionToUser\"},{\"name\":\"agents\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToUser\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Account\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"providerAccountId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"refresh_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"access_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires_at\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"token_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scope\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"id_token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"session_state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AccountToUser\"}],\"dbName\":null},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SessionToUser\"}],\"dbName\":null},\"VerificationToken\":{\"fields\":[{\"name\":\"identifier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expires\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Installation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"githubId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"owner\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repositories\",\"kind\":\"object\",\"type\":\"Repository\",\"relationName\":\"InstallationToRepository\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Repository\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"installationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"installation\",\"kind\":\"object\",\"type\":\"Installation\",\"relationName\":\"InstallationToRepository\"},{\"name\":\"fullName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"defaultBranch\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"agentBindings\",\"kind\":\"object\",\"type\":\"AgentRepositoryBinding\",\"relationName\":\"AgentRepositoryBindingToRepository\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"RepositoryToReview\"}],\"dbName\":null},\"Agent\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AgentToUser\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generationPrompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileTypeFilters\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severityThreshold\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"evaluationPrompt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"evaluationDims\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bindings\",\"kind\":\"object\",\"type\":\"AgentRepositoryBinding\",\"relationName\":\"AgentToAgentRepositoryBinding\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"AgentToReview\"},{\"name\":\"costTracking\",\"kind\":\"object\",\"type\":\"CostTracking\",\"relationName\":\"AgentToCostTracking\"}],\"dbName\":null},\"AgentRepositoryBinding\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToAgentRepositoryBinding\"},{\"name\":\"repoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repo\",\"kind\":\"object\",\"type\":\"Repository\",\"relationName\":\"AgentRepositoryBindingToRepository\"},{\"name\":\"enabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"repo\",\"kind\":\"object\",\"type\":\"Repository\",\"relationName\":\"RepositoryToReview\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToReview\"},{\"name\":\"prNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"commitSha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lineNumber\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"codeChunk\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"postedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"githubCommentId\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"rawLLM\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"evaluations\",\"kind\":\"object\",\"type\":\"Evaluation\",\"relationName\":\"EvaluationToReview\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"Feedback\",\"relationName\":\"FeedbackToReview\"},{\"name\":\"isThreadReply\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"parentReviewId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Evaluation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"EvaluationToReview\"},{\"name\":\"scores\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Feedback\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"FeedbackToReview\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"CostTracking\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"agent\",\"kind\":\"object\",\"type\":\"Agent\",\"relationName\":\"AgentToCostTracking\"},{\"name\":\"repoId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generationTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"evaluationTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalTokens\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"estimatedCostUsd\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

